(()=>{var t={977:t=>{class r{static parse(t){return new Uint8Array(Array.prototype.map.call(atob(t.replace(/-/g,"+").replace(/_/g,"/").replace(/\s/g,"")),(t=>t.charCodeAt(0))))}static stringify(t){return btoa(String.fromCharCode.apply(0,t)).replace(/=/g,"").replace(/\+/g,"-").replace(/\//g,"_")}}t.exports=new class{constructor(){if(!crypto||!crypto.subtle)throw new Error("Crypto not supported!");this.algorithms={ES256:{name:"ECDSA",namedCurve:"P-256",hash:{name:"SHA-256"}},ES384:{name:"ECDSA",namedCurve:"P-384",hash:{name:"SHA-384"}},ES512:{name:"ECDSA",namedCurve:"P-512",hash:{name:"SHA-512"}},HS256:{name:"HMAC",hash:{name:"SHA-256"}},HS384:{name:"HMAC",hash:{name:"SHA-384"}},HS512:{name:"HMAC",hash:{name:"SHA-512"}}}}_utf8ToUint8Array(t){return r.parse(btoa(unescape(encodeURIComponent(t))))}_str2ab(t){const r=new ArrayBuffer(t.length),e=new Uint8Array(r);for(let r=0,a=t.length;r<a;r++)e[r]=t.charCodeAt(r);return r}_decodePayload(t){switch(t.length%4){case 0:break;case 2:t+="==";break;case 3:t+="=";break;default:throw new Error("Illegal base64url string!")}try{return JSON.parse(decodeURIComponent(escape(atob(t))))}catch{return null}}async sign(t,e,a={algorithm:"HS256"}){if("string"==typeof a&&(a={algorithm:a}),null===t||"object"!=typeof t)throw new Error("payload must be an object");if("string"!=typeof e)throw new Error("secret must be a string");if("string"!=typeof a.algorithm)throw new Error("options.algorithm must be a string");const s=this.algorithms[a.algorithm];if(!s)throw new Error("algorithm not found");t.iat=Math.floor(Date.now()/1e3);const o=JSON.stringify(t),n=`${r.stringify(this._utf8ToUint8Array(JSON.stringify({alg:a.algorithm,kid:a.keyid})))}.${r.stringify(this._utf8ToUint8Array(o))}`;let i,c="raw";e.startsWith("-----BEGIN")?(c="pkcs8",i=this._str2ab(atob(e.replace(/-----BEGIN.*?-----/g,"").replace(/-----END.*?-----/g,"").replace(/\s/g,"")))):i=this._utf8ToUint8Array(e);const h=await crypto.subtle.importKey(c,i,s,!1,["sign"]),l=await crypto.subtle.sign(s,h,this._utf8ToUint8Array(n));return`${n}.${r.stringify(new Uint8Array(l))}`}async verify(t,e,a={algorithm:"HS256"}){if("string"==typeof a&&(a={algorithm:a}),"string"!=typeof t)throw new Error("token must be a string");if("string"!=typeof e)throw new Error("secret must be a string");if("string"!=typeof a.algorithm)throw new Error("options.algorithm must be a string");const s=t.split(".");if(3!==s.length)throw new Error("token must consist of 3 parts");const o=this.algorithms[a.algorithm];if(!o)throw new Error("algorithm not found");const n=this.decode(t);if(n.nbf&&n.nbf>=Math.floor(Date.now()/1e3))return!1;if(n.exp&&n.exp<Math.floor(Date.now()/1e3))return!1;let i,c="raw";e.startsWith("-----BEGIN")?(c="pkcs8",i=this._str2ab(atob(e.replace(/-----BEGIN.*?-----/g,"").replace(/-----END.*?-----/g,"").replace(/\s/g,"")))):i=this._utf8ToUint8Array(e);const h=await crypto.subtle.importKey(c,i,o,!1,["sign"]),l=await crypto.subtle.sign(o,h,this._utf8ToUint8Array(s.slice(0,2).join(".")));return r.stringify(new Uint8Array(l))===s[2]}decode(t){return this._decodePayload(t.split(".")[1].replace(/-/g,"+").replace(/_/g,"/"))}}},123:t=>{t.exports=class{constructor(t,r){this.state=t,this.env=r}async getWalletSessionSecret(){return await this.state.storage.get("sessionSecret"),!0}async setWalletSessionSecret(t){return await this.state.storage.put("sessionSecret",t),!0}async fetch(t){let r=new URL(t.url).host,e=t.headers.get("If-Match"),a=await t.text(),s=!1;return await this.state.storage.transaction((async t=>{await t.get(r)==e||"*"==e?(s=!0,await t.put(r,a)):t.rollback()})),new Response("Changed: "+s)}}}},r={};function e(a){var s=r[a];if(void 0!==s)return s.exports;var o=r[a]={exports:{}};return t[a](o,o.exports,e),o.exports}e(123),e(977)})();